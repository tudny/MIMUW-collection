-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Src/Jabba/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListInstr                               (4)
	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block   (5)
	Instr -> 'fun' Ident '(' ListArg ')' Block         (6)
	Instr -> ';'                                       (7)
	Instr -> Ident '++' ';'                            (8)
	Instr -> Ident '--' ';'                            (9)
	Instr -> Ident '=' Expr ';'                        (10)
	Instr -> 'return' Expr ';'                         (11)
	Instr -> 'return' ';'                              (12)
	Instr -> 'break' ';'                               (13)
	Instr -> 'continue' ';'                            (14)
	Instr -> IfStmt                                    (15)
	Instr -> 'while' Expr Block                        (16)
	Instr -> 'while' Expr Block 'finally' Block        (17)
	Instr -> 'for' Ident '=' Expr '..' Expr Block      (18)
	Instr -> Expr ';'                                  (19)
	Instr -> Decl ';'                                  (20)
	Instr -> Block                                     (21)
	Instr -> Ident '[' Expr ']' '=' Expr ';'           (22)
	Arg -> 'var' Ident ':' Type                        (23)
	Arg -> 'val' Ident ':' Type                        (24)
	Arg -> 'var' Ident ':' 'new' Type                  (25)
	Arg -> 'val' Ident ':' 'new' Type                  (26)
	ListArg ->                                         (27)
	ListArg -> Arg                                     (28)
	ListArg -> Arg ',' ListArg                         (29)
	Item -> Ident ':' Type '=' Expr                    (30)
	Item -> Ident '=' Expr                             (31)
	Item -> Ident ':' Type                             (32)
	ListItem ->                                        (33)
	ListItem -> Item                                   (34)
	ListItem -> Item ',' ListItem                      (35)
	Decl -> 'var' ListItem                             (36)
	Decl -> 'val' ListItem                             (37)
	Block -> '{' ListInstr '}'                         (38)
	ListInstr ->                                       (39)
	ListInstr -> Instr ListInstr                       (40)
	IfStmt -> 'if' Expr Block                          (41)
	IfStmt -> 'if' Expr Block 'else' Block             (42)
	IfStmt -> 'if' Expr Block 'else' IfStmt            (43)
	Type -> 'Integer'                                  (44)
	Type -> 'Boolean'                                  (45)
	Type -> 'String'                                   (46)
	Type -> 'Unit'                                     (47)
	Type -> '(' ListTArg ')' '->' Type                 (48)
	Type -> '[' Type ']'                               (49)
	TArg -> 'var' Type                                 (50)
	TArg -> 'val' Type                                 (51)
	TArg -> 'var' '$' Type                             (52)
	TArg -> 'val' '$' Type                             (53)
	ListTArg ->                                        (54)
	ListTArg -> TArg                                   (55)
	ListTArg -> TArg ',' ListTArg                      (56)
	PlsOp -> '+'                                       (57)
	PlsOp -> '-'                                       (58)
	MulOp -> '*'                                       (59)
	MulOp -> '/'                                       (60)
	MulOp -> '%'                                       (61)
	NotOp -> '!'                                       (62)
	NegOp -> '-'                                       (63)
	AndOp -> '&&'                                      (64)
	OrOp -> '||'                                       (65)
	RelOp -> '=='                                      (66)
	RelOp -> '!='                                      (67)
	RelOp -> '<'                                       (68)
	RelOp -> '>'                                       (69)
	RelOp -> '<='                                      (70)
	RelOp -> '>='                                      (71)
	Expr6 -> Ident '[' Expr ']'                        (72)
	Expr6 -> Ident                                     (73)
	Expr6 -> Integer                                   (74)
	Expr6 -> 'true'                                    (75)
	Expr6 -> 'false'                                   (76)
	Expr6 -> 'unit'                                    (77)
	Expr6 -> String                                    (78)
	Expr6 -> '(' Expr ')'                              (79)
	Expr -> '[' Expr ';' Expr ']'                      (80)
	Expr -> '[' ListExpr ']'                           (81)
	Expr -> Expr1 OrOp Expr                            (82)
	Expr -> Expr1 '?' Expr1 ':' Expr                   (83)
	Expr -> '|' ListArg '|' Expr1                      (84)
	Expr -> '||' Expr1                                 (85)
	Expr -> Expr1                                      (86)
	Expr5 -> Expr5 '(' ListExpr ')'                    (87)
	Expr5 -> '|' ListArg '|' Block                     (88)
	Expr5 -> '||' Block                                (89)
	Expr5 -> NegOp Expr6                               (90)
	Expr5 -> NotOp Expr6                               (91)
	Expr5 -> Expr6                                     (92)
	Expr4 -> Expr4 MulOp Expr5                         (93)
	Expr4 -> Expr5                                     (94)
	Expr3 -> Expr3 PlsOp Expr4                         (95)
	Expr3 -> Expr4                                     (96)
	Expr2 -> Expr2 RelOp Expr3                         (97)
	Expr2 -> Expr3                                     (98)
	Expr1 -> Expr2 AndOp Expr1                         (99)
	Expr1 -> Expr2                                     (100)
	ListExpr ->                                        (101)
	ListExpr -> Expr                                   (102)
	ListExpr -> Expr ',' ListExpr                      (103)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'$'            { PT _ (TS _ 3) }
	'%'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'..'           { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	':'            { PT _ (TS _ 17) }
	';'            { PT _ (TS _ 18) }
	'<'            { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'?'            { PT _ (TS _ 25) }
	'Boolean'      { PT _ (TS _ 26) }
	'Integer'      { PT _ (TS _ 27) }
	'String'       { PT _ (TS _ 28) }
	'Unit'         { PT _ (TS _ 29) }
	'['            { PT _ (TS _ 30) }
	']'            { PT _ (TS _ 31) }
	'break'        { PT _ (TS _ 32) }
	'continue'     { PT _ (TS _ 33) }
	'else'         { PT _ (TS _ 34) }
	'false'        { PT _ (TS _ 35) }
	'finally'      { PT _ (TS _ 36) }
	'for'          { PT _ (TS _ 37) }
	'fun'          { PT _ (TS _ 38) }
	'if'           { PT _ (TS _ 39) }
	'new'          { PT _ (TS _ 40) }
	'return'       { PT _ (TS _ 41) }
	'true'         { PT _ (TS _ 42) }
	'unit'         { PT _ (TS _ 43) }
	'val'          { PT _ (TS _ 44) }
	'var'          { PT _ (TS _ 45) }
	'while'        { PT _ (TS _ 46) }
	'{'            { PT _ (TS _ 47) }
	'|'            { PT _ (TS _ 48) }
	'||'           { PT _ (TS _ 49) }
	'}'            { PT _ (TS _ 50) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Instr           rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
	Arg             rules 23, 24, 25, 26
	ListArg         rules 27, 28, 29
	Item            rules 30, 31, 32
	ListItem        rules 33, 34, 35
	Decl            rules 36, 37
	Block           rule  38
	ListInstr       rules 39, 40
	IfStmt          rules 41, 42, 43
	Type            rules 44, 45, 46, 47, 48, 49
	TArg            rules 50, 51, 52, 53
	ListTArg        rules 54, 55, 56
	PlsOp           rules 57, 58
	MulOp           rules 59, 60, 61
	NotOp           rule  62
	NegOp           rule  63
	AndOp           rule  64
	OrOp            rule  65
	RelOp           rules 66, 67, 68, 69, 70, 71
	Expr6           rules 72, 73, 74, 75, 76, 77, 78, 79
	Expr            rules 80, 81, 82, 83, 84, 85, 86
	Expr5           rules 87, 88, 89, 90, 91, 92
	Expr4           rules 93, 94
	Expr3           rules 95, 96
	Expr2           rules 97, 98
	Expr1           rules 99, 100
	ListExpr        rules 101, 102, 103

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'['            shift, and enter state 25
	'break'        shift, and enter state 26
	'continue'     shift, and enter state 27
	'false'        shift, and enter state 28
	'for'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 32
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'val'          shift, and enter state 35
	'var'          shift, and enter state 36
	'while'        shift, and enter state 37
	'{'            shift, and enter state 38
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42
	%eof           reduce using rule 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 10
	IfStmt         goto state 11
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 15
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	Instr -> Ident . '++' ';'                           (rule 8)
	Instr -> Ident . '--' ';'                           (rule 9)
	Instr -> Ident . '=' Expr ';'                       (rule 10)
	Instr -> Ident . '[' Expr ']' '=' Expr ';'          (rule 22)
	Expr6 -> Ident . '[' Expr ']'                       (rule 72)
	Expr6 -> Ident .                                    (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	'++'           shift, and enter state 93
	'-'            reduce using rule 73
	'--'           shift, and enter state 94
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'='            shift, and enter state 95
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'?'            reduce using rule 73
	'['            shift, and enter state 96
	'||'           reduce using rule 73


State 4

	Expr6 -> Integer .                                  (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            reduce using rule 74
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'?'            reduce using rule 74
	']'            reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74


State 5

	Expr6 -> String .                                   (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'..'           reduce using rule 78
	'/'            reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'?'            reduce using rule 78
	']'            reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListInstr -> Instr . ListInstr                      (rule 40)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'['            shift, and enter state 25
	'break'        shift, and enter state 26
	'continue'     shift, and enter state 27
	'false'        shift, and enter state 28
	'for'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 32
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'val'          shift, and enter state 35
	'var'          shift, and enter state 36
	'while'        shift, and enter state 37
	'{'            shift, and enter state 38
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	'}'            reduce using rule 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42
	%eof           reduce using rule 39

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 92
	IfStmt         goto state 11
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 15
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 8

	Instr -> Decl . ';'                                 (rule 20)

	';'            shift, and enter state 91


State 9

	Instr -> Block .                                    (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'['            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'unit'         reduce using rule 21
	'val'          reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'|'            reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 10

	Program -> ListInstr .                              (rule 4)

	%eof           reduce using rule 4


State 11

	Instr -> IfStmt .                                   (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'['            reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'fun'          reduce using rule 15
	'if'           reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'unit'         reduce using rule 15
	'val'          reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'|'            reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 12

	Expr5 -> NotOp . Expr6                              (rule 91)

	'('            shift, and enter state 22
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 90

State 13

	Expr5 -> NegOp . Expr6                              (rule 90)

	'('            shift, and enter state 22
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 89

State 14

	Expr5 -> Expr6 .                                    (rule 92)

	'!='           reduce using rule 92
	'%'            reduce using rule 92
	'&&'           reduce using rule 92
	'('            reduce using rule 92
	')'            reduce using rule 92
	'*'            reduce using rule 92
	'+'            reduce using rule 92
	','            reduce using rule 92
	'-'            reduce using rule 92
	'..'           reduce using rule 92
	'/'            reduce using rule 92
	':'            reduce using rule 92
	';'            reduce using rule 92
	'<'            reduce using rule 92
	'<='           reduce using rule 92
	'=='           reduce using rule 92
	'>'            reduce using rule 92
	'>='           reduce using rule 92
	'?'            reduce using rule 92
	']'            reduce using rule 92
	'{'            reduce using rule 92
	'||'           reduce using rule 92


State 15

	Instr -> Expr . ';'                                 (rule 19)

	';'            shift, and enter state 88


State 16

	Expr5 -> Expr5 . '(' ListExpr ')'                   (rule 87)
	Expr4 -> Expr5 .                                    (rule 94)

	'!='           reduce using rule 94
	'%'            reduce using rule 94
	'&&'           reduce using rule 94
	'('            shift, and enter state 87
	')'            reduce using rule 94
	'*'            reduce using rule 94
	'+'            reduce using rule 94
	','            reduce using rule 94
	'-'            reduce using rule 94
	'..'           reduce using rule 94
	'/'            reduce using rule 94
	':'            reduce using rule 94
	';'            reduce using rule 94
	'<'            reduce using rule 94
	'<='           reduce using rule 94
	'=='           reduce using rule 94
	'>'            reduce using rule 94
	'>='           reduce using rule 94
	'?'            reduce using rule 94
	']'            reduce using rule 94
	'{'            reduce using rule 94
	'||'           reduce using rule 94


State 17

	Expr4 -> Expr4 . MulOp Expr5                        (rule 93)
	Expr3 -> Expr4 .                                    (rule 96)

	'!='           reduce using rule 96
	'%'            shift, and enter state 84
	'&&'           reduce using rule 96
	')'            reduce using rule 96
	'*'            shift, and enter state 85
	'+'            reduce using rule 96
	','            reduce using rule 96
	'-'            reduce using rule 96
	'..'           reduce using rule 96
	'/'            shift, and enter state 86
	':'            reduce using rule 96
	';'            reduce using rule 96
	'<'            reduce using rule 96
	'<='           reduce using rule 96
	'=='           reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	'?'            reduce using rule 96
	']'            reduce using rule 96
	'{'            reduce using rule 96
	'||'           reduce using rule 96

	MulOp          goto state 83

State 18

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 95)
	Expr2 -> Expr3 .                                    (rule 98)

	'!='           reduce using rule 98
	'&&'           reduce using rule 98
	')'            reduce using rule 98
	'+'            shift, and enter state 81
	','            reduce using rule 98
	'-'            shift, and enter state 82
	'..'           reduce using rule 98
	':'            reduce using rule 98
	';'            reduce using rule 98
	'<'            reduce using rule 98
	'<='           reduce using rule 98
	'=='           reduce using rule 98
	'>'            reduce using rule 98
	'>='           reduce using rule 98
	'?'            reduce using rule 98
	']'            reduce using rule 98
	'{'            reduce using rule 98
	'||'           reduce using rule 98

	PlsOp          goto state 80

State 19

	Expr2 -> Expr2 . RelOp Expr3                        (rule 97)
	Expr1 -> Expr2 . AndOp Expr1                        (rule 99)
	Expr1 -> Expr2 .                                    (rule 100)

	'!='           shift, and enter state 73
	'&&'           shift, and enter state 74
	')'            reduce using rule 100
	','            reduce using rule 100
	'..'           reduce using rule 100
	':'            reduce using rule 100
	';'            reduce using rule 100
	'<'            shift, and enter state 75
	'<='           shift, and enter state 76
	'=='           shift, and enter state 77
	'>'            shift, and enter state 78
	'>='           shift, and enter state 79
	'?'            reduce using rule 100
	']'            reduce using rule 100
	'{'            reduce using rule 100
	'||'           reduce using rule 100

	AndOp          goto state 71
	RelOp          goto state 72

State 20

	Expr -> Expr1 . OrOp Expr                           (rule 82)
	Expr -> Expr1 . '?' Expr1 ':' Expr                  (rule 83)
	Expr -> Expr1 .                                     (rule 86)

	')'            reduce using rule 86
	','            reduce using rule 86
	'..'           reduce using rule 86
	';'            reduce using rule 86
	'?'            shift, and enter state 69
	']'            reduce using rule 86
	'{'            reduce using rule 86
	'||'           shift, and enter state 70

	OrOp           goto state 68

State 21

	NotOp -> '!' .                                      (rule 62)

	'('            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	'unit'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 22

	Expr6 -> '(' . Expr ')'                             (rule 79)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 67
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 23

	NegOp -> '-' .                                      (rule 63)

	'('            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	'unit'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 24

	Instr -> ';' .                                      (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'['            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'false'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'if'           reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'unit'         reduce using rule 7
	'val'          reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'|'            reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 25

	Expr -> '[' . Expr ';' Expr ']'                     (rule 80)
	Expr -> '[' . ListExpr ']'                          (rule 81)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	']'            reduce using rule 101
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 65
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20
	ListExpr       goto state 66

State 26

	Instr -> 'break' . ';'                              (rule 13)

	';'            shift, and enter state 64


State 27

	Instr -> 'continue' . ';'                           (rule 14)

	';'            shift, and enter state 63


State 28

	Expr6 -> 'false' .                                  (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'/'            reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'?'            reduce using rule 76
	']'            reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76


State 29

	Instr -> 'for' . Ident '=' Expr '..' Expr Block     (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 62

State 30

	Instr -> 'fun' . Ident '(' ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' . Ident '(' ListArg ')' Block        (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 61

State 31

	IfStmt -> 'if' . Expr Block                         (rule 41)
	IfStmt -> 'if' . Expr Block 'else' Block            (rule 42)
	IfStmt -> 'if' . Expr Block 'else' IfStmt           (rule 43)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 60
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 32

	Instr -> 'return' . Expr ';'                        (rule 11)
	Instr -> 'return' . ';'                             (rule 12)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 59
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 58
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 33

	Expr6 -> 'true' .                                   (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'?'            reduce using rule 75
	']'            reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75


State 34

	Expr6 -> 'unit' .                                   (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'/'            reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'?'            reduce using rule 77
	']'            reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77


State 35

	Decl -> 'val' . ListItem                            (rule 37)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 54
	Item           goto state 55
	ListItem       goto state 57

State 36

	Decl -> 'var' . ListItem                            (rule 36)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 54
	Item           goto state 55
	ListItem       goto state 56

State 37

	Instr -> 'while' . Expr Block                       (rule 16)
	Instr -> 'while' . Expr Block 'finally' Block       (rule 17)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 53
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 38

	Block -> '{' . ListInstr '}'                        (rule 38)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	';'            shift, and enter state 24
	'['            shift, and enter state 25
	'break'        shift, and enter state 26
	'continue'     shift, and enter state 27
	'false'        shift, and enter state 28
	'for'          shift, and enter state 29
	'fun'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 32
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'val'          shift, and enter state 35
	'var'          shift, and enter state 36
	'while'        shift, and enter state 37
	'{'            shift, and enter state 38
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	'}'            reduce using rule 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Instr          goto state 7
	Decl           goto state 8
	Block          goto state 9
	ListInstr      goto state 52
	IfStmt         goto state 11
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 15
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 39

	Expr -> '|' . ListArg '|' Expr1                     (rule 84)
	Expr5 -> '|' . ListArg '|' Block                    (rule 88)

	'val'          shift, and enter state 50
	'var'          shift, and enter state 51
	'|'            reduce using rule 27

	Arg            goto state 48
	ListArg        goto state 49

State 40

	Expr -> '||' . Expr1                                (rule 85)
	Expr5 -> '||' . Block                               (rule 89)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'{'            shift, and enter state 38
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	Block          goto state 44
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 45

State 41

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	']'            reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2


State 42

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	']'            reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3


State 43

	Expr6 -> Ident . '[' Expr ']'                       (rule 72)
	Expr6 -> Ident .                                    (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            reduce using rule 73
	':'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'?'            reduce using rule 73
	'['            shift, and enter state 127
	']'            reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73


State 44

	Expr5 -> '||' Block .                               (rule 89)

	'!='           reduce using rule 89
	'%'            reduce using rule 89
	'&&'           reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'*'            reduce using rule 89
	'+'            reduce using rule 89
	','            reduce using rule 89
	'-'            reduce using rule 89
	'..'           reduce using rule 89
	'/'            reduce using rule 89
	':'            reduce using rule 89
	';'            reduce using rule 89
	'<'            reduce using rule 89
	'<='           reduce using rule 89
	'=='           reduce using rule 89
	'>'            reduce using rule 89
	'>='           reduce using rule 89
	'?'            reduce using rule 89
	']'            reduce using rule 89
	'{'            reduce using rule 89
	'||'           reduce using rule 89


State 45

	Expr -> '||' Expr1 .                                (rule 85)

	')'            reduce using rule 85
	','            reduce using rule 85
	'..'           reduce using rule 85
	';'            reduce using rule 85
	']'            reduce using rule 85
	'{'            reduce using rule 85


State 46

	Expr5 -> '|' . ListArg '|' Block                    (rule 88)

	'val'          shift, and enter state 50
	'var'          shift, and enter state 51
	'|'            reduce using rule 27

	Arg            goto state 48
	ListArg        goto state 126

State 47

	Expr5 -> '||' . Block                               (rule 89)

	'{'            shift, and enter state 38

	Block          goto state 44

State 48

	ListArg -> Arg .                                    (rule 28)
	ListArg -> Arg . ',' ListArg                        (rule 29)

	')'            reduce using rule 28
	','            shift, and enter state 125
	'|'            reduce using rule 28


State 49

	Expr -> '|' ListArg . '|' Expr1                     (rule 84)
	Expr5 -> '|' ListArg . '|' Block                    (rule 88)

	'|'            shift, and enter state 124


State 50

	Arg -> 'val' . Ident ':' Type                       (rule 24)
	Arg -> 'val' . Ident ':' 'new' Type                 (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 123

State 51

	Arg -> 'var' . Ident ':' Type                       (rule 23)
	Arg -> 'var' . Ident ':' 'new' Type                 (rule 25)

	L_Ident        shift, and enter state 2

	Ident          goto state 122

State 52

	Block -> '{' ListInstr . '}'                        (rule 38)

	'}'            shift, and enter state 121


State 53

	Instr -> 'while' Expr . Block                       (rule 16)
	Instr -> 'while' Expr . Block 'finally' Block       (rule 17)

	'{'            shift, and enter state 38

	Block          goto state 120

State 54

	Item -> Ident . ':' Type '=' Expr                   (rule 30)
	Item -> Ident . '=' Expr                            (rule 31)
	Item -> Ident . ':' Type                            (rule 32)

	':'            shift, and enter state 118
	'='            shift, and enter state 119


State 55

	ListItem -> Item .                                  (rule 34)
	ListItem -> Item . ',' ListItem                     (rule 35)

	','            shift, and enter state 117
	';'            reduce using rule 34


State 56

	Decl -> 'var' ListItem .                            (rule 36)

	';'            reduce using rule 36


State 57

	Decl -> 'val' ListItem .                            (rule 37)

	';'            reduce using rule 37


State 58

	Instr -> 'return' Expr . ';'                        (rule 11)

	';'            shift, and enter state 116


State 59

	Instr -> 'return' ';' .                             (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'['            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'if'           reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'unit'         reduce using rule 12
	'val'          reduce using rule 12
	'var'          reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'|'            reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 60

	IfStmt -> 'if' Expr . Block                         (rule 41)
	IfStmt -> 'if' Expr . Block 'else' Block            (rule 42)
	IfStmt -> 'if' Expr . Block 'else' IfStmt           (rule 43)

	'{'            shift, and enter state 38

	Block          goto state 115

State 61

	Instr -> 'fun' Ident . '(' ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident . '(' ListArg ')' Block        (rule 6)

	'('            shift, and enter state 114


State 62

	Instr -> 'for' Ident . '=' Expr '..' Expr Block     (rule 18)

	'='            shift, and enter state 113


State 63

	Instr -> 'continue' ';' .                           (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'['            reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'if'           reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'unit'         reduce using rule 14
	'val'          reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'|'            reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 64

	Instr -> 'break' ';' .                              (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'['            reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'if'           reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'unit'         reduce using rule 13
	'val'          reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'|'            reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 65

	Expr -> '[' Expr . ';' Expr ']'                     (rule 80)
	ListExpr -> Expr .                                  (rule 102)
	ListExpr -> Expr . ',' ListExpr                     (rule 103)

	','            shift, and enter state 111
	';'            shift, and enter state 112
	']'            reduce using rule 102


State 66

	Expr -> '[' ListExpr . ']'                          (rule 81)

	']'            shift, and enter state 110


State 67

	Expr6 -> '(' Expr . ')'                             (rule 79)

	')'            shift, and enter state 109


State 68

	Expr -> Expr1 OrOp . Expr                           (rule 82)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 108
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 69

	Expr -> Expr1 '?' . Expr1 ':' Expr                  (rule 83)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 107

State 70

	OrOp -> '||' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'['            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	'unit'         reduce using rule 65
	'|'            reduce using rule 65
	'||'           reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 71

	Expr1 -> Expr2 AndOp . Expr1                        (rule 99)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 106

State 72

	Expr2 -> Expr2 RelOp . Expr3                        (rule 97)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 105

State 73

	RelOp -> '!=' .                                     (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	'unit'         reduce using rule 67
	'|'            reduce using rule 67
	'||'           reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 74

	AndOp -> '&&' .                                     (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	'unit'         reduce using rule 64
	'|'            reduce using rule 64
	'||'           reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 75

	RelOp -> '<' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	'unit'         reduce using rule 68
	'|'            reduce using rule 68
	'||'           reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 76

	RelOp -> '<=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	'unit'         reduce using rule 70
	'|'            reduce using rule 70
	'||'           reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 77

	RelOp -> '==' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	'unit'         reduce using rule 66
	'|'            reduce using rule 66
	'||'           reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 78

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	'unit'         reduce using rule 69
	'|'            reduce using rule 69
	'||'           reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 79

	RelOp -> '>=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	'unit'         reduce using rule 71
	'|'            reduce using rule 71
	'||'           reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 80

	Expr3 -> Expr3 PlsOp . Expr4                        (rule 95)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 16
	Expr4          goto state 104

State 81

	PlsOp -> '+' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	'unit'         reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 82

	PlsOp -> '-' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	'unit'         reduce using rule 58
	'|'            reduce using rule 58
	'||'           reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 83

	Expr4 -> Expr4 MulOp . Expr5                        (rule 93)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 103

State 84

	MulOp -> '%' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	'unit'         reduce using rule 61
	'|'            reduce using rule 61
	'||'           reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 85

	MulOp -> '*' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	'unit'         reduce using rule 59
	'|'            reduce using rule 59
	'||'           reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 86

	MulOp -> '/' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	'unit'         reduce using rule 60
	'|'            reduce using rule 60
	'||'           reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 87

	Expr5 -> Expr5 '(' . ListExpr ')'                   (rule 87)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 101
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 101
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20
	ListExpr       goto state 102

State 88

	Instr -> Expr ';' .                                 (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'['            reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'if'           reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'unit'         reduce using rule 19
	'val'          reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'|'            reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 89

	Expr5 -> NegOp Expr6 .                              (rule 90)

	'!='           reduce using rule 90
	'%'            reduce using rule 90
	'&&'           reduce using rule 90
	'('            reduce using rule 90
	')'            reduce using rule 90
	'*'            reduce using rule 90
	'+'            reduce using rule 90
	','            reduce using rule 90
	'-'            reduce using rule 90
	'..'           reduce using rule 90
	'/'            reduce using rule 90
	':'            reduce using rule 90
	';'            reduce using rule 90
	'<'            reduce using rule 90
	'<='           reduce using rule 90
	'=='           reduce using rule 90
	'>'            reduce using rule 90
	'>='           reduce using rule 90
	'?'            reduce using rule 90
	']'            reduce using rule 90
	'{'            reduce using rule 90
	'||'           reduce using rule 90


State 90

	Expr5 -> NotOp Expr6 .                              (rule 91)

	'!='           reduce using rule 91
	'%'            reduce using rule 91
	'&&'           reduce using rule 91
	'('            reduce using rule 91
	')'            reduce using rule 91
	'*'            reduce using rule 91
	'+'            reduce using rule 91
	','            reduce using rule 91
	'-'            reduce using rule 91
	'..'           reduce using rule 91
	'/'            reduce using rule 91
	':'            reduce using rule 91
	';'            reduce using rule 91
	'<'            reduce using rule 91
	'<='           reduce using rule 91
	'=='           reduce using rule 91
	'>'            reduce using rule 91
	'>='           reduce using rule 91
	'?'            reduce using rule 91
	']'            reduce using rule 91
	'{'            reduce using rule 91
	'||'           reduce using rule 91


State 91

	Instr -> Decl ';' .                                 (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'['            reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'unit'         reduce using rule 20
	'val'          reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'|'            reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 92

	ListInstr -> Instr ListInstr .                      (rule 40)

	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 93

	Instr -> Ident '++' . ';'                           (rule 8)

	';'            shift, and enter state 100


State 94

	Instr -> Ident '--' . ';'                           (rule 9)

	';'            shift, and enter state 99


State 95

	Instr -> Ident '=' . Expr ';'                       (rule 10)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 98
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 96

	Instr -> Ident '[' . Expr ']' '=' Expr ';'          (rule 22)
	Expr6 -> Ident '[' . Expr ']'                       (rule 72)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 97
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 97

	Instr -> Ident '[' Expr . ']' '=' Expr ';'          (rule 22)
	Expr6 -> Ident '[' Expr . ']'                       (rule 72)

	']'            shift, and enter state 153


State 98

	Instr -> Ident '=' Expr . ';'                       (rule 10)

	';'            shift, and enter state 152


State 99

	Instr -> Ident '--' ';' .                           (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'['            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'false'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'if'           reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'unit'         reduce using rule 9
	'val'          reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'|'            reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 100

	Instr -> Ident '++' ';' .                           (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'['            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'false'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'if'           reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'unit'         reduce using rule 8
	'val'          reduce using rule 8
	'var'          reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'|'            reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 101

	ListExpr -> Expr .                                  (rule 102)
	ListExpr -> Expr . ',' ListExpr                     (rule 103)

	')'            reduce using rule 102
	','            shift, and enter state 111
	']'            reduce using rule 102


State 102

	Expr5 -> Expr5 '(' ListExpr . ')'                   (rule 87)

	')'            shift, and enter state 151


State 103

	Expr5 -> Expr5 . '(' ListExpr ')'                   (rule 87)
	Expr4 -> Expr4 MulOp Expr5 .                        (rule 93)

	'!='           reduce using rule 93
	'%'            reduce using rule 93
	'&&'           reduce using rule 93
	'('            shift, and enter state 87
	')'            reduce using rule 93
	'*'            reduce using rule 93
	'+'            reduce using rule 93
	','            reduce using rule 93
	'-'            reduce using rule 93
	'..'           reduce using rule 93
	'/'            reduce using rule 93
	':'            reduce using rule 93
	';'            reduce using rule 93
	'<'            reduce using rule 93
	'<='           reduce using rule 93
	'=='           reduce using rule 93
	'>'            reduce using rule 93
	'>='           reduce using rule 93
	'?'            reduce using rule 93
	']'            reduce using rule 93
	'{'            reduce using rule 93
	'||'           reduce using rule 93


State 104

	Expr4 -> Expr4 . MulOp Expr5                        (rule 93)
	Expr3 -> Expr3 PlsOp Expr4 .                        (rule 95)

	'!='           reduce using rule 95
	'%'            shift, and enter state 84
	'&&'           reduce using rule 95
	')'            reduce using rule 95
	'*'            shift, and enter state 85
	'+'            reduce using rule 95
	','            reduce using rule 95
	'-'            reduce using rule 95
	'..'           reduce using rule 95
	'/'            shift, and enter state 86
	':'            reduce using rule 95
	';'            reduce using rule 95
	'<'            reduce using rule 95
	'<='           reduce using rule 95
	'=='           reduce using rule 95
	'>'            reduce using rule 95
	'>='           reduce using rule 95
	'?'            reduce using rule 95
	']'            reduce using rule 95
	'{'            reduce using rule 95
	'||'           reduce using rule 95

	MulOp          goto state 83

State 105

	Expr3 -> Expr3 . PlsOp Expr4                        (rule 95)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 97)

	'!='           reduce using rule 97
	'&&'           reduce using rule 97
	')'            reduce using rule 97
	'+'            shift, and enter state 81
	','            reduce using rule 97
	'-'            shift, and enter state 82
	'..'           reduce using rule 97
	':'            reduce using rule 97
	';'            reduce using rule 97
	'<'            reduce using rule 97
	'<='           reduce using rule 97
	'=='           reduce using rule 97
	'>'            reduce using rule 97
	'>='           reduce using rule 97
	'?'            reduce using rule 97
	']'            reduce using rule 97
	'{'            reduce using rule 97
	'||'           reduce using rule 97

	PlsOp          goto state 80

State 106

	Expr1 -> Expr2 AndOp Expr1 .                        (rule 99)

	')'            reduce using rule 99
	','            reduce using rule 99
	'..'           reduce using rule 99
	':'            reduce using rule 99
	';'            reduce using rule 99
	'?'            reduce using rule 99
	']'            reduce using rule 99
	'{'            reduce using rule 99
	'||'           reduce using rule 99


State 107

	Expr -> Expr1 '?' Expr1 . ':' Expr                  (rule 83)

	':'            shift, and enter state 150


State 108

	Expr -> Expr1 OrOp Expr .                           (rule 82)

	')'            reduce using rule 82
	','            reduce using rule 82
	'..'           reduce using rule 82
	';'            reduce using rule 82
	']'            reduce using rule 82
	'{'            reduce using rule 82


State 109

	Expr6 -> '(' Expr ')' .                             (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'..'           reduce using rule 79
	'/'            reduce using rule 79
	':'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'?'            reduce using rule 79
	']'            reduce using rule 79
	'{'            reduce using rule 79
	'||'           reduce using rule 79


State 110

	Expr -> '[' ListExpr ']' .                          (rule 81)

	')'            reduce using rule 81
	','            reduce using rule 81
	'..'           reduce using rule 81
	';'            reduce using rule 81
	']'            reduce using rule 81
	'{'            reduce using rule 81


State 111

	ListExpr -> Expr ',' . ListExpr                     (rule 103)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	')'            reduce using rule 101
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	']'            reduce using rule 101
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 101
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20
	ListExpr       goto state 149

State 112

	Expr -> '[' Expr ';' . Expr ']'                     (rule 80)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 148
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 113

	Instr -> 'for' Ident '=' . Expr '..' Expr Block     (rule 18)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 147
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 114

	Instr -> 'fun' Ident '(' . ListArg ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' . ListArg ')' Block        (rule 6)

	')'            reduce using rule 27
	'val'          shift, and enter state 50
	'var'          shift, and enter state 51

	Arg            goto state 48
	ListArg        goto state 146

State 115

	IfStmt -> 'if' Expr Block .                         (rule 41)
	IfStmt -> 'if' Expr Block . 'else' Block            (rule 42)
	IfStmt -> 'if' Expr Block . 'else' IfStmt           (rule 43)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'['            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'else'         shift, and enter state 145
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'fun'          reduce using rule 41
	'if'           reduce using rule 41
	'return'       reduce using rule 41
	'true'         reduce using rule 41
	'unit'         reduce using rule 41
	'val'          reduce using rule 41
	'var'          reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'|'            reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41
	%eof           reduce using rule 41


State 116

	Instr -> 'return' Expr ';' .                        (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'['            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'if'           reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'unit'         reduce using rule 11
	'val'          reduce using rule 11
	'var'          reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'|'            reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 117

	ListItem -> Item ',' . ListItem                     (rule 35)

	';'            reduce using rule 33
	L_Ident        shift, and enter state 2

	Ident          goto state 54
	Item           goto state 55
	ListItem       goto state 144

State 118

	Item -> Ident ':' . Type '=' Expr                   (rule 30)
	Item -> Ident ':' . Type                            (rule 32)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 137

State 119

	Item -> Ident '=' . Expr                            (rule 31)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 136
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 120

	Instr -> 'while' Expr Block .                       (rule 16)
	Instr -> 'while' Expr Block . 'finally' Block       (rule 17)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'['            reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'finally'      shift, and enter state 135
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'if'           reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'unit'         reduce using rule 16
	'val'          reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'|'            reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 121

	Block -> '{' ListInstr '}' .                        (rule 38)

	'!'            reduce using rule 38
	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'..'           reduce using rule 38
	'/'            reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'?'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'finally'      reduce using rule 38
	'for'          reduce using rule 38
	'fun'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'unit'         reduce using rule 38
	'val'          reduce using rule 38
	'var'          reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'|'            reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	%eof           reduce using rule 38


State 122

	Arg -> 'var' Ident . ':' Type                       (rule 23)
	Arg -> 'var' Ident . ':' 'new' Type                 (rule 25)

	':'            shift, and enter state 134


State 123

	Arg -> 'val' Ident . ':' Type                       (rule 24)
	Arg -> 'val' Ident . ':' 'new' Type                 (rule 26)

	':'            shift, and enter state 133


State 124

	Expr -> '|' ListArg '|' . Expr1                     (rule 84)
	Expr5 -> '|' ListArg '|' . Block                    (rule 88)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'{'            shift, and enter state 38
	'|'            shift, and enter state 46
	'||'           shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	Block          goto state 131
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 132

State 125

	ListArg -> Arg ',' . ListArg                        (rule 29)

	')'            reduce using rule 27
	'val'          shift, and enter state 50
	'var'          shift, and enter state 51
	'|'            reduce using rule 27

	Arg            goto state 48
	ListArg        goto state 130

State 126

	Expr5 -> '|' ListArg . '|' Block                    (rule 88)

	'|'            shift, and enter state 129


State 127

	Expr6 -> Ident '[' . Expr ']'                       (rule 72)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 128
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 128

	Expr6 -> Ident '[' Expr . ']'                       (rule 72)

	']'            shift, and enter state 172


State 129

	Expr5 -> '|' ListArg '|' . Block                    (rule 88)

	'{'            shift, and enter state 38

	Block          goto state 131

State 130

	ListArg -> Arg ',' ListArg .                        (rule 29)

	')'            reduce using rule 29
	'|'            reduce using rule 29


State 131

	Expr5 -> '|' ListArg '|' Block .                    (rule 88)

	'!='           reduce using rule 88
	'%'            reduce using rule 88
	'&&'           reduce using rule 88
	'('            reduce using rule 88
	')'            reduce using rule 88
	'*'            reduce using rule 88
	'+'            reduce using rule 88
	','            reduce using rule 88
	'-'            reduce using rule 88
	'..'           reduce using rule 88
	'/'            reduce using rule 88
	':'            reduce using rule 88
	';'            reduce using rule 88
	'<'            reduce using rule 88
	'<='           reduce using rule 88
	'=='           reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	'?'            reduce using rule 88
	']'            reduce using rule 88
	'{'            reduce using rule 88
	'||'           reduce using rule 88


State 132

	Expr -> '|' ListArg '|' Expr1 .                     (rule 84)

	')'            reduce using rule 84
	','            reduce using rule 84
	'..'           reduce using rule 84
	';'            reduce using rule 84
	']'            reduce using rule 84
	'{'            reduce using rule 84


State 133

	Arg -> 'val' Ident ':' . Type                       (rule 24)
	Arg -> 'val' Ident ':' . 'new' Type                 (rule 26)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143
	'new'          shift, and enter state 171

	Type           goto state 170

State 134

	Arg -> 'var' Ident ':' . Type                       (rule 23)
	Arg -> 'var' Ident ':' . 'new' Type                 (rule 25)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143
	'new'          shift, and enter state 169

	Type           goto state 168

State 135

	Instr -> 'while' Expr Block 'finally' . Block       (rule 17)

	'{'            shift, and enter state 38

	Block          goto state 167

State 136

	Item -> Ident '=' Expr .                            (rule 31)

	','            reduce using rule 31
	';'            reduce using rule 31


State 137

	Item -> Ident ':' Type . '=' Expr                   (rule 30)
	Item -> Ident ':' Type .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 166


State 138

	Type -> '(' . ListTArg ')' '->' Type                (rule 48)

	')'            reduce using rule 54
	'val'          shift, and enter state 164
	'var'          shift, and enter state 165

	TArg           goto state 162
	ListTArg       goto state 163

State 139

	Type -> 'Boolean' .                                 (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'='            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'|'            reduce using rule 45


State 140

	Type -> 'Integer' .                                 (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'='            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'|'            reduce using rule 44


State 141

	Type -> 'String' .                                  (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'='            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'|'            reduce using rule 46


State 142

	Type -> 'Unit' .                                    (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'|'            reduce using rule 47


State 143

	Type -> '[' . Type ']'                              (rule 49)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 161

State 144

	ListItem -> Item ',' ListItem .                     (rule 35)

	';'            reduce using rule 35


State 145

	IfStmt -> 'if' Expr Block 'else' . Block            (rule 42)
	IfStmt -> 'if' Expr Block 'else' . IfStmt           (rule 43)

	'if'           shift, and enter state 31
	'{'            shift, and enter state 38

	Block          goto state 159
	IfStmt         goto state 160

State 146

	Instr -> 'fun' Ident '(' ListArg . ')' ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' ListArg . ')' Block        (rule 6)

	')'            shift, and enter state 158


State 147

	Instr -> 'for' Ident '=' Expr . '..' Expr Block     (rule 18)

	'..'           shift, and enter state 157


State 148

	Expr -> '[' Expr ';' Expr . ']'                     (rule 80)

	']'            shift, and enter state 156


State 149

	ListExpr -> Expr ',' ListExpr .                     (rule 103)

	')'            reduce using rule 103
	']'            reduce using rule 103


State 150

	Expr -> Expr1 '?' Expr1 ':' . Expr                  (rule 83)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 155
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 151

	Expr5 -> Expr5 '(' ListExpr ')' .                   (rule 87)

	'!='           reduce using rule 87
	'%'            reduce using rule 87
	'&&'           reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	'*'            reduce using rule 87
	'+'            reduce using rule 87
	','            reduce using rule 87
	'-'            reduce using rule 87
	'..'           reduce using rule 87
	'/'            reduce using rule 87
	':'            reduce using rule 87
	';'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'=='           reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	'?'            reduce using rule 87
	']'            reduce using rule 87
	'{'            reduce using rule 87
	'||'           reduce using rule 87


State 152

	Instr -> Ident '=' Expr ';' .                       (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'['            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'false'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'if'           reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'unit'         reduce using rule 10
	'val'          reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'|'            reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 153

	Instr -> Ident '[' Expr ']' . '=' Expr ';'          (rule 22)
	Expr6 -> Ident '[' Expr ']' .                       (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            shift, and enter state 154
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	'||'           reduce using rule 72


State 154

	Instr -> Ident '[' Expr ']' '=' . Expr ';'          (rule 22)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 186
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 155

	Expr -> Expr1 '?' Expr1 ':' Expr .                  (rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	'..'           reduce using rule 83
	';'            reduce using rule 83
	']'            reduce using rule 83
	'{'            reduce using rule 83


State 156

	Expr -> '[' Expr ';' Expr ']' .                     (rule 80)

	')'            reduce using rule 80
	','            reduce using rule 80
	'..'           reduce using rule 80
	';'            reduce using rule 80
	']'            reduce using rule 80
	'{'            reduce using rule 80


State 157

	Instr -> 'for' Ident '=' Expr '..' . Expr Block     (rule 18)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 185
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 158

	Instr -> 'fun' Ident '(' ListArg ')' . ':' Type Block    (rule 5)
	Instr -> 'fun' Ident '(' ListArg ')' . Block        (rule 6)

	':'            shift, and enter state 184
	'{'            shift, and enter state 38

	Block          goto state 183

State 159

	IfStmt -> 'if' Expr Block 'else' Block .            (rule 42)

	'!'            reduce using rule 42
	'('            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'['            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'fun'          reduce using rule 42
	'if'           reduce using rule 42
	'return'       reduce using rule 42
	'true'         reduce using rule 42
	'unit'         reduce using rule 42
	'val'          reduce using rule 42
	'var'          reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'|'            reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42
	%eof           reduce using rule 42


State 160

	IfStmt -> 'if' Expr Block 'else' IfStmt .           (rule 43)

	'!'            reduce using rule 43
	'('            reduce using rule 43
	'-'            reduce using rule 43
	';'            reduce using rule 43
	'['            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'false'        reduce using rule 43
	'for'          reduce using rule 43
	'fun'          reduce using rule 43
	'if'           reduce using rule 43
	'return'       reduce using rule 43
	'true'         reduce using rule 43
	'unit'         reduce using rule 43
	'val'          reduce using rule 43
	'var'          reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'|'            reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	L_Ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43
	%eof           reduce using rule 43


State 161

	Type -> '[' Type . ']'                              (rule 49)

	']'            shift, and enter state 182


State 162

	ListTArg -> TArg .                                  (rule 55)
	ListTArg -> TArg . ',' ListTArg                     (rule 56)

	')'            reduce using rule 55
	','            shift, and enter state 181


State 163

	Type -> '(' ListTArg . ')' '->' Type                (rule 48)

	')'            shift, and enter state 180


State 164

	TArg -> 'val' . Type                                (rule 51)
	TArg -> 'val' . '$' Type                            (rule 53)

	'$'            shift, and enter state 179
	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 178

State 165

	TArg -> 'var' . Type                                (rule 50)
	TArg -> 'var' . '$' Type                            (rule 52)

	'$'            shift, and enter state 177
	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 176

State 166

	Item -> Ident ':' Type '=' . Expr                   (rule 30)

	'!'            shift, and enter state 21
	'('            shift, and enter state 22
	'-'            shift, and enter state 23
	'['            shift, and enter state 25
	'false'        shift, and enter state 28
	'true'         shift, and enter state 33
	'unit'         shift, and enter state 34
	'|'            shift, and enter state 39
	'||'           shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	NotOp          goto state 12
	NegOp          goto state 13
	Expr6          goto state 14
	Expr           goto state 175
	Expr5          goto state 16
	Expr4          goto state 17
	Expr3          goto state 18
	Expr2          goto state 19
	Expr1          goto state 20

State 167

	Instr -> 'while' Expr Block 'finally' Block .       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'['            reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'if'           reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'unit'         reduce using rule 17
	'val'          reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'|'            reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 168

	Arg -> 'var' Ident ':' Type .                       (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	'|'            reduce using rule 23


State 169

	Arg -> 'var' Ident ':' 'new' . Type                 (rule 25)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 174

State 170

	Arg -> 'val' Ident ':' Type .                       (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	'|'            reduce using rule 24


State 171

	Arg -> 'val' Ident ':' 'new' . Type                 (rule 26)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 173

State 172

	Expr6 -> Ident '[' Expr ']' .                       (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'..'           reduce using rule 72
	'/'            reduce using rule 72
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	']'            reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72


State 173

	Arg -> 'val' Ident ':' 'new' Type .                 (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	'|'            reduce using rule 26


State 174

	Arg -> 'var' Ident ':' 'new' Type .                 (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	'|'            reduce using rule 25


State 175

	Item -> Ident ':' Type '=' Expr .                   (rule 30)

	','            reduce using rule 30
	';'            reduce using rule 30


State 176

	TArg -> 'var' Type .                                (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50


State 177

	TArg -> 'var' '$' . Type                            (rule 52)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 193

State 178

	TArg -> 'val' Type .                                (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51


State 179

	TArg -> 'val' '$' . Type                            (rule 53)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 192

State 180

	Type -> '(' ListTArg ')' . '->' Type                (rule 48)

	'->'           shift, and enter state 191


State 181

	ListTArg -> TArg ',' . ListTArg                     (rule 56)

	')'            reduce using rule 54
	'val'          shift, and enter state 164
	'var'          shift, and enter state 165

	TArg           goto state 162
	ListTArg       goto state 190

State 182

	Type -> '[' Type ']' .                              (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'='            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'|'            reduce using rule 49


State 183

	Instr -> 'fun' Ident '(' ListArg ')' Block .        (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'['            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'false'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'if'           reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'unit'         reduce using rule 6
	'val'          reduce using rule 6
	'var'          reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'|'            reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 184

	Instr -> 'fun' Ident '(' ListArg ')' ':' . Type Block    (rule 5)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 189

State 185

	Instr -> 'for' Ident '=' Expr '..' Expr . Block     (rule 18)

	'{'            shift, and enter state 38

	Block          goto state 188

State 186

	Instr -> Ident '[' Expr ']' '=' Expr . ';'          (rule 22)

	';'            shift, and enter state 187


State 187

	Instr -> Ident '[' Expr ']' '=' Expr ';' .          (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'['            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'unit'         reduce using rule 22
	'val'          reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'|'            reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 188

	Instr -> 'for' Ident '=' Expr '..' Expr Block .     (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'['            reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'if'           reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'unit'         reduce using rule 18
	'val'          reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'|'            reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 189

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type . Block    (rule 5)

	'{'            shift, and enter state 38

	Block          goto state 195

State 190

	ListTArg -> TArg ',' ListTArg .                     (rule 56)

	')'            reduce using rule 56


State 191

	Type -> '(' ListTArg ')' '->' . Type                (rule 48)

	'('            shift, and enter state 138
	'Boolean'      shift, and enter state 139
	'Integer'      shift, and enter state 140
	'String'       shift, and enter state 141
	'Unit'         shift, and enter state 142
	'['            shift, and enter state 143

	Type           goto state 194

State 192

	TArg -> 'val' '$' Type .                            (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53


State 193

	TArg -> 'var' '$' Type .                            (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52


State 194

	Type -> '(' ListTArg ')' '->' Type .                (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'='            reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'|'            reduce using rule 48


State 195

	Instr -> 'fun' Ident '(' ListArg ')' ':' Type Block .    (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'['            reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'if'           reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'unit'         reduce using rule 5
	'val'          reduce using rule 5
	'var'          reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'|'            reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 104
Number of terminals: 53
Number of non-terminals: 32
Number of states: 196
