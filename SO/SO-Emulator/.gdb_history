si
dd
si
dd
si
dd
si
dd
si
dd
i r
q
dd
q
b get_addr_case
dd
c
dd
si
dd
si
dd
si
dd
q
b get_addr_case
c
dd
si
dd
si
dd
q
b get_addr_case
c
dd
si
dd
si
dd
si
q
dd
b get_addr_case
c
dd
si
dd
si
dd
p $r10
si
dd
si
dd
q
b get_addr_case
c
dd
si
dd
si
dd
p $r10
si
dd
si
dd
dd
si
dd
define sidd
si
dd
end
sidd
sidd
q
b get_addr_case
c
b get_addr_case.delta_zero
c
dd
si
dd
i r
define sidd
si
dd
end
sidd
i r
p r10
p $r10
p/x $r10
z/x $r10
/x $r10
x/x $r10
x/b $r10
dd
sidd
p $r10
i r
x $r10
q
b get_addr_case.not_second_registers
c
dd
sidd
define sidd
si 
dd
end
sidd
p $r10
sidd
p $r10
p $rsi
x $rsi
p $rsi
p $r10
sidd
p $r10
c
c
q
b get_addr_case.not_second_registers
c
i r
dd
q
b get_addr_case.not_second_registers
c
sidd
i r
x r10
x $r10
x/b $r10
sidd
x/b $r10
q
b get_addr_case.get_addr_case
q
b get_addr_case.not_second_registers 
sidd
c
sidd
p $r10
sidd
x $r10
sidd
p $r11b
p $r11
dd
p $r10
sidd
p $r11
dd
p $r10
sidd
q
b handle_instruction.debug 
c
pr
rp
sr
i r
dd
y
q
b handle_instruction
i r
c
i r
p $rdx
p/x $rdx
c
c
p/x $rdx
b handle_instruction.debug 
c
i r
c

c
c
c
p/x $rdx
c
i r
q
c
disas
q
c
disas
q
c
q
si
q
sidd
q
c
disas
make
q
c
q
c
q
b so_emul.check 
c
i r
q
c
q
b so_emul.check 
c
i r
q
b so_emul.check 
c
i r
q
b so_emul.check 
c
i r
q
b so_emul.check 
c
i r
q
b handle_group_1.not_cmpi
c
q
b handle_group_1.not_cmpi
c
c
c
c
c
c
c
dd
sidd
i r
sidd
x $r13
x/a $r13
x/ab $r13
x/ah $r13
x/ab $r13
x/ab $r13
x/tb $r13
q
